[{"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\apiCore.js":"1","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\index.js":"2","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\App.js":"3","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx":"4","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\PrivateRoute.jsx":"5","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx":"6","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx":"7","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx":"8","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js":"9","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js":"10","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signin.jsx":"11","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx":"12","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js":"13","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Search.jsx":"14","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Product.jsx":"15","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx":"16","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx":"17","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js":"18","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Menu.jsx":"19","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx":"20","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx":"21","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signup.jsx":"22","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\fixedPrices.js":"23","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx":"24","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkbox.jsx":"25","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\ShowImage.jsx":"26","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\config.js":"27","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx":"28","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Layout.jsx":"29","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\RadioBox.jsx":"30"},{"size":3410,"mtime":1607112144707,"results":"31","hashOfConfig":"32"},{"size":142,"mtime":1606655358767,"results":"33","hashOfConfig":"32"},{"size":137,"mtime":1606347581149,"results":"34","hashOfConfig":"32"},{"size":2170,"mtime":1606967027599,"results":"35","hashOfConfig":"32"},{"size":612,"mtime":1606669408022,"results":"36","hashOfConfig":"32"},{"size":645,"mtime":1606669394970,"results":"37","hashOfConfig":"32"},{"size":2327,"mtime":1606674658036,"results":"38","hashOfConfig":"32"},{"size":1968,"mtime":1606693919063,"results":"39","hashOfConfig":"32"},{"size":3189,"mtime":1607110381578,"results":"40","hashOfConfig":"32"},{"size":1783,"mtime":1606439874796,"results":"41","hashOfConfig":"32"},{"size":3358,"mtime":1606669507614,"results":"42","hashOfConfig":"32"},{"size":2645,"mtime":1606669346458,"results":"43","hashOfConfig":"32"},{"size":1937,"mtime":1606966737468,"results":"44","hashOfConfig":"32"},{"size":4602,"mtime":1606693227378,"results":"45","hashOfConfig":"32"},{"size":2059,"mtime":1607111127297,"results":"46","hashOfConfig":"32"},{"size":4560,"mtime":1607112508024,"results":"47","hashOfConfig":"32"},{"size":4971,"mtime":1607771912129,"results":"48","hashOfConfig":"32"},{"size":2034,"mtime":1606974074257,"results":"49","hashOfConfig":"32"},{"size":4192,"mtime":1606695238150,"results":"50","hashOfConfig":"32"},{"size":2351,"mtime":1607104606100,"results":"51","hashOfConfig":"32"},{"size":6255,"mtime":1607104393266,"results":"52","hashOfConfig":"32"},{"size":3409,"mtime":1606669512977,"results":"53","hashOfConfig":"32"},{"size":639,"mtime":1607772316442,"results":"54","hashOfConfig":"32"},{"size":6902,"mtime":1606971143409,"results":"55","hashOfConfig":"32"},{"size":1047,"mtime":1606669438690,"results":"56","hashOfConfig":"32"},{"size":432,"mtime":1606669497374,"results":"57","hashOfConfig":"32"},{"size":50,"mtime":1606416358341,"results":"58","hashOfConfig":"32"},{"size":7393,"mtime":1607051606502,"results":"59","hashOfConfig":"32"},{"size":504,"mtime":1606669459743,"results":"60","hashOfConfig":"32"},{"size":675,"mtime":1606669478139,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1takxqy",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"67"},"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\apiCore.js",[],["139","140"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\index.js",[],["141","142"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\App.js",[],["143","144"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx",["145"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role },\r\n    } = isAuthenticated()\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h4 className=\"card-header \">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/category\" className=\"nav-link\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/product\" className=\"nav-link\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/admin/orders\" className=\"nav-link\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5 \">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? 'Admin' : 'Registered User'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Good day ${name}`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n",["146","147"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\PrivateRoute.jsx",[],["148","149"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx",["150"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role },\r\n    } = isAuthenticated()\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h4 className=\"card-header \">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/cart\" className=\"nav-link\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/profile/update\" className=\"nav-link\">\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5 \">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? 'Admin' : 'Registered User'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const purchaseHistory = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase History</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">History</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Good day ${name}`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n",["151","152"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx",["153"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts } from './apiCore'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('created at').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n    }, [])\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Homepage\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signin.jsx",[],["154","155"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Search.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Product.jsx",["156"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx",["157","158","159"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js",["160","161"],"export const addItem = (item, next) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.push({\r\n            ...item,\r\n            count: 1,\r\n        })\r\n\r\n        cart = Array.from(new Set(cart.map((p) => p._id))).map((id) => {\r\n            return cart.find((p) => p._id === id)\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n}\r\n\r\nexport const removeItem = (productId) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1)\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n\r\n    return cart\r\n}\r\n\r\nexport const emptyCart = (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart')\r\n        next()\r\n    }\r\n}\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Menu.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx",["162"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { Link } from 'react-router-dom'\r\nimport { getCart, removeItem } from './cartHelpers'\r\nimport Card from './Card'\r\nimport Checkout from './Checkout'\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([])\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setItems(getCart())\r\n        setRefresh(false)\r\n    }, [refresh])\r\n\r\n    const showItems = (items) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4\">\r\n                    Your cart has {`${items.length}`} items\r\n                </h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        refresh={(value = false) => {\r\n                            setRefresh(value)\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const noItemsMessage = () => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4\">\r\n                    Your cart is empty.\r\n                    <hr />\r\n                    <Link to=\"/shop\">Continue Shopping</Link>\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your car items. Add, remove, checkout or continue shopping\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout\r\n                        products={items}\r\n                        refresh={(value = false) => {\r\n                            setRefresh(value)\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx",["163","164","165","166","167"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport {\r\n    getBraintreeClientToken,\r\n    getProducts,\r\n    processPayment,\r\n    createOrder,\r\n} from './apiCore'\r\nimport { emptyCart } from './cartHelpers'\r\nimport Card from './Card'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\n\r\nconst Checkout = ({ products, refresh }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: '',\r\n    })\r\n\r\n    const deliveryAddress = data.address\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id\r\n    const token = isAuthenticated() && isAuthenticated().token\r\n\r\n    //TODO\r\n    useEffect(() => {\r\n        getPaymentToken(userId, token)\r\n    }, [])\r\n\r\n    const getPaymentToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then((data) => {\r\n            if (data.error) {\r\n                setData({ ...data, error: data.error })\r\n            } else {\r\n                setData({ clientToken: data.clientToken })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAddress = (event) => {\r\n        setData({ ...data, address: event.target.value })\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price\r\n        }, 0)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                {' '}\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    const buy = () => {\r\n        setData({ ...data, loading: true })\r\n        let nonce\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then((data) => {\r\n                nonce = data.nonce\r\n\r\n                //console.log(data)\r\n                //console.log(nonce, getTotal(products))\r\n\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products),\r\n                }\r\n\r\n                //console.log(paymentData)\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then((response) => {\r\n                        console.log(response)\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress,\r\n                        }\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n\r\n                        setData({ ...data, success: response.success })\r\n                        emptyCart(() => {\r\n                            refresh(true)\r\n                            console.log('payment success and empty cart')\r\n                            console.log(createOrderData)\r\n                            setData({ ...data, loading: false, success: true })\r\n                        })\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                        setData({ ...data, loading: false })\r\n                    })\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setData({ ...data, error: error.message })\r\n            })\r\n    }\r\n\r\n    const showDropIn = () => {\r\n        return (\r\n            <div onBlur={() => setData({ ...data, error: '' })}>\r\n                {data.clientToken !== null &&\r\n                data.clientToken !== '' &&\r\n                products.length > 0 ? (\r\n                    <div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"\" className=\"text-muted\">\r\n                                Delivery Address:\r\n                            </label>\r\n\r\n                            <textarea\r\n                                onChange={handleAddress}\r\n                                className=\"form-control\"\r\n                                value={data.address}\r\n                                placeholder=\"Type your delivery address here...\"\r\n                            />\r\n                        </div>\r\n\r\n                        <DropIn\r\n                            options={{\r\n                                authorization: data.clientToken,\r\n                                paypal: {\r\n                                    flow: 'vault',\r\n                                },\r\n                            }}\r\n                            onInstance={(instance) =>\r\n                                (data.instance = instance)\r\n                            }\r\n                        />\r\n                        <button\r\n                            onClick={buy}\r\n                            className=\"btn btn-success btn-block\"\r\n                        >\r\n                            Pay\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = (error) => {\r\n        return (\r\n            <div\r\n                className=\"alert alert-danger\"\r\n                style={{ display: error ? '' : 'none' }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = (success) => {\r\n        return (\r\n            <div\r\n                className=\"alert alert-info\"\r\n                style={{ display: success ? '' : 'none' }}\r\n            >\r\n                Thanks! Your payment was successful!\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showLoading = (loading) => {\r\n        return loading && <h2>Loading</h2>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signup.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\fixedPrices.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx",["168","169","170","171"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { createProduct, getCategories } from './apiAdmin'\r\n\r\nconst AddProduct = () => {\r\n    const { user, token } = isAuthenticated()\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photos: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: '',\r\n    })\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData,\r\n    } = values\r\n\r\n    const init = () => {\r\n        getCategories().then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData(),\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        const value =\r\n            name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: '', loading: true })\r\n\r\n        createProduct(user._id, token, formData).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    category: '',\r\n                    loading: false,\r\n                    createdProduct: data.name,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const newPostForm = () => {\r\n        return (\r\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n                <h4>Post Photo</h4>\r\n\r\n                <div className=\"from-group\">\r\n                    <label className=\"btn btn-secondary\">\r\n                        <input\r\n                            onChange={handleChange('photo')}\r\n                            type=\"file\"\r\n                            name=\"photo\"\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name</label>\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Description</label>\r\n                    <textarea\r\n                        onChange={handleChange('description')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={description}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Price</label>\r\n                    <input\r\n                        onChange={handleChange('price')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={price}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Category</label>\r\n                    <select\r\n                        onChange={handleChange('category')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        {categories &&\r\n                            categories.map((c, i) => {\r\n                                return (\r\n                                    <option key={i} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Quantity</label>\r\n                    <input\r\n                        onChange={handleChange('quantity')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={quantity}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Shipping</label>\r\n                    <select\r\n                        onChange={handleChange('shipping')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"1\">Yes</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button className=\"btn btn-outline-primary\">\r\n                    Create Product\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? error : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: createdProduct ? '' : 'none' }}\r\n        >\r\n            <h2>{`${createdProduct} is created`}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () =>\r\n        loading && <div className=\"alert alert-success\">Loading</div>\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new product\"\r\n            description={`Good day ${user.name}, ready to add a new product?`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddProduct\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkbox.jsx",["172"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (c) => () => {\r\n        const currentCategoryId = checked.indexOf(c)\r\n        const newCheckedCategoryId = [...checked]\r\n\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c)\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1)\r\n        }\r\n\r\n        console.log(newCheckedCategoryId)\r\n        setChecked(newCheckedCategoryId)\r\n        handleFilters(newCheckedCategoryId)\r\n    }\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\nexport default Checkbox\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\ShowImage.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\config.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx",["173"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin'\r\nimport moment from 'moment'\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n                console.log(data.user)\r\n                console.log(data.token)\r\n            } else {\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setStatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValues()\r\n    }, [])\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            )\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>\r\n        }\r\n    }\r\n\r\n    const showInput = (key, value) => {\r\n        return (\r\n            <div className=\"input-group mb-2 mr-sm-2\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">{key}</div>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleStatusChange = (event, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, event.target.value).then(\r\n            (data) => {\r\n                if (data.error) {\r\n                    console.log('Status update failed', data.error)\r\n                } else {\r\n                    loadOrders()\r\n                    console.log(event.target.value)\r\n                    console.log('Success')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const showStatus = (order) => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <h3 className=\"mark mb-3\">Status: {order.status}</h3>\r\n\r\n                <select\r\n                    onChange={(event) => handleStatusChange(event, order._id)}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Update Status</option>\r\n                    {statusValues.map((status, index) => (\r\n                        <option key={index} value={status}>\r\n                            {status}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`Good day ${user.name}, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((order, index) => {\r\n                        console.log(order)\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                className=\"mt-5\"\r\n                                style={{ borderBottom: '5px solid indigo' }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {order._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(order)}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {order.transaction_id}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${order.amount}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {order.user.name}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{' '}\r\n                                        {moment(order.createdAt).fromNow()}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {order.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{' '}\r\n                                    {order.products.length}\r\n                                </h3>\r\n\r\n                                {order.products.map((product, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"mb-4\"\r\n                                            key={index}\r\n                                            style={{\r\n                                                padding: '20px',\r\n                                                border: '1px solid indigo',\r\n                                            }}\r\n                                        >\r\n                                            {showInput(\r\n                                                'Product name',\r\n                                                product.name\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product price',\r\n                                                product.price\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product total',\r\n                                                product.count\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product Id',\r\n                                                product._id\r\n                                            )}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Layout.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\RadioBox.jsx",["174","175","176"],"import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0)\r\n\r\n    const handleChange = (event) => {\r\n        handleFilters(event.target.value)\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                value={`${p._id}`}\r\n                name={p}\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default RadioBox\r\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"177","replacedBy":"183"},{"ruleId":"179","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":8,"column":17,"nodeType":"187","messageId":"188","endLine":8,"endColumn":20},{"ruleId":"177","replacedBy":"189"},{"ruleId":"179","replacedBy":"190"},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"185","severity":1,"message":"186","line":8,"column":17,"nodeType":"187","messageId":"188","endLine":8,"endColumn":20},{"ruleId":"177","replacedBy":"193"},{"ruleId":"179","replacedBy":"194"},{"ruleId":"185","severity":1,"message":"195","line":10,"column":12,"nodeType":"187","messageId":"188","endLine":10,"endColumn":17},{"ruleId":"177","replacedBy":"196"},{"ruleId":"179","replacedBy":"197"},{"ruleId":"185","severity":1,"message":"195","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},{"ruleId":"185","severity":1,"message":"195","line":17,"column":12,"nodeType":"187","messageId":"188","endLine":17,"endColumn":17},{"ruleId":"185","severity":1,"message":"198","line":18,"column":19,"nodeType":"187","messageId":"188","endLine":18,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":73,"column":8,"nodeType":"201","endLine":73,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":47,"column":31,"nodeType":"205","messageId":"206","endLine":47,"endColumn":33},{"ruleId":"203","severity":1,"message":"204","line":64,"column":31,"nodeType":"205","messageId":"206","endLine":64,"endColumn":33},{"ruleId":"185","severity":1,"message":"207","line":4,"column":19,"nodeType":"187","messageId":"188","endLine":4,"endColumn":29},{"ruleId":"185","severity":1,"message":"208","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":5,"column":5,"nodeType":"187","messageId":"188","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"210","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":12},{"ruleId":"199","severity":1,"message":"211","line":33,"column":8,"nodeType":"201","endLine":33,"endColumn":10,"suggestions":"212"},{"ruleId":"185","severity":1,"message":"213","line":69,"column":13,"nodeType":"187","messageId":"188","endLine":69,"endColumn":21},{"ruleId":"185","severity":1,"message":"214","line":29,"column":9,"nodeType":"187","messageId":"188","endLine":29,"endColumn":17},{"ruleId":"185","severity":1,"message":"215","line":30,"column":9,"nodeType":"187","messageId":"188","endLine":30,"endColumn":17},{"ruleId":"185","severity":1,"message":"216","line":35,"column":9,"nodeType":"187","messageId":"188","endLine":35,"endColumn":26},{"ruleId":"199","severity":1,"message":"217","line":55,"column":8,"nodeType":"201","endLine":55,"endColumn":10,"suggestions":"218"},{"ruleId":"185","severity":1,"message":"219","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"220","line":37,"column":8,"nodeType":"201","endLine":37,"endColumn":10,"suggestions":"221"},{"ruleId":"185","severity":1,"message":"219","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"222","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":46},{"ruleId":"185","severity":1,"message":"223","line":4,"column":12,"nodeType":"187","messageId":"188","endLine":4,"endColumn":17},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],["224"],["225"],["224"],["225"],"no-unused-vars","'_id' is assigned a value but never used.","Identifier","unusedVar",["224"],["225"],["224"],["225"],["224"],["225"],"'error' is assigned a value but never used.",["224"],["225"],"'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["226"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeItem' is defined but never used.","'Layout' is defined but never used.","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["227"],"'getNonce' is assigned a value but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["228"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["229"],"'Fragment' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"238","text":"239"},"Update the dependencies array to be: [token, userId]",{"range":"240","text":"241"},"Update the dependencies array to be: [init]",{"range":"242","text":"243"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"244","text":"245"},[2170,2172],"[limit, loadFilteredResults, myFilters.filters, skip]",[906,908],"[token, userId]",[1333,1335],"[init]",[1093,1095],"[loadOrders, loadStatusValues]"]