[{"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\apiCore.js":"1","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\index.js":"2","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\App.js":"3","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx":"4","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\PrivateRoute.jsx":"5","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx":"6","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx":"7","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx":"8","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js":"9","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js":"10","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signin.jsx":"11","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx":"12","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js":"13","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Search.jsx":"14","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Product.jsx":"15","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx":"16","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx":"17","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js":"18","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Menu.jsx":"19","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx":"20","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx":"21","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signup.jsx":"22","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\fixedPrices.js":"23","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx":"24","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkbox.jsx":"25","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\ShowImage.jsx":"26","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\config.js":"27","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx":"28"},{"size":3418,"mtime":1606934663575,"results":"29","hashOfConfig":"30"},{"size":142,"mtime":1606655358767,"results":"31","hashOfConfig":"30"},{"size":137,"mtime":1606347581149,"results":"32","hashOfConfig":"30"},{"size":2170,"mtime":1606967027599,"results":"33","hashOfConfig":"30"},{"size":612,"mtime":1606669408022,"results":"34","hashOfConfig":"30"},{"size":645,"mtime":1606669394970,"results":"35","hashOfConfig":"30"},{"size":2327,"mtime":1606674658036,"results":"36","hashOfConfig":"30"},{"size":1968,"mtime":1606693919063,"results":"37","hashOfConfig":"30"},{"size":1744,"mtime":1606967844538,"results":"38","hashOfConfig":"30"},{"size":1783,"mtime":1606439874796,"results":"39","hashOfConfig":"30"},{"size":3358,"mtime":1606669507614,"results":"40","hashOfConfig":"30"},{"size":2645,"mtime":1606669346458,"results":"41","hashOfConfig":"30"},{"size":1937,"mtime":1606966737468,"results":"42","hashOfConfig":"30"},{"size":4602,"mtime":1606693227378,"results":"43","hashOfConfig":"30"},{"size":2051,"mtime":1606872350523,"results":"44","hashOfConfig":"30"},{"size":4413,"mtime":1606942256743,"results":"45","hashOfConfig":"30"},{"size":4971,"mtime":1606939950930,"results":"46","hashOfConfig":"30"},{"size":2034,"mtime":1606874035083,"results":"47","hashOfConfig":"30"},{"size":4192,"mtime":1606695238150,"results":"48","hashOfConfig":"30"},{"size":2351,"mtime":1606942274928,"results":"49","hashOfConfig":"30"},{"size":6255,"mtime":1606939844710,"results":"50","hashOfConfig":"30"},{"size":3409,"mtime":1606669512977,"results":"51","hashOfConfig":"30"},{"size":544,"mtime":1606624484807,"results":"52","hashOfConfig":"30"},{"size":6902,"mtime":1606793230235,"results":"53","hashOfConfig":"30"},{"size":1047,"mtime":1606669438690,"results":"54","hashOfConfig":"30"},{"size":432,"mtime":1606669497374,"results":"55","hashOfConfig":"30"},{"size":50,"mtime":1606416358341,"results":"56","hashOfConfig":"30"},{"size":1295,"mtime":1606967608644,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1takxqy",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\apiCore.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\index.js",[],["130","131"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\App.js",[],["132","133"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx",["134"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role },\r\n    } = isAuthenticated()\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h4 className=\"card-header \">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/category\" className=\"nav-link\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/product\" className=\"nav-link\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/admin/orders\" className=\"nav-link\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5 \">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? 'Admin' : 'Registered User'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Good day ${name}`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\PrivateRoute.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx",["135"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role },\r\n    } = isAuthenticated()\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h4 className=\"card-header \">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/cart\" className=\"nav-link\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/profile/update\" className=\"nav-link\">\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5 \">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? 'Admin' : 'Registered User'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const purchaseHistory = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase History</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">History</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Good day ${name}`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx",["136"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts } from './apiCore'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('created at').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n    }, [])\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Homepage\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js",[],["137","138"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signin.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx",[],["139","140"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Search.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Product.jsx",["141"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { read, listRelated } from './apiCore'\r\nimport Card from './Card'\r\n\r\nconst Product = (props) => {\r\n    const [product, setProduct] = useState({})\r\n    const [relatedProduct, setRelatedProduct] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId\r\n        loadSingleProduct(productId)\r\n    }, [props])\r\n\r\n    const loadSingleProduct = (productId) => {\r\n        read(productId).then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProduct(data.product)\r\n\r\n                listRelated(data.product._id).then((data) => {\r\n                    if (data.error) {\r\n                        setError(data.error)\r\n                    } else {\r\n                        setRelatedProduct(data)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={\r\n                product &&\r\n                product.description &&\r\n                product.description.substring(0, 100)\r\n            }\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && (\r\n                        <Card product={product} showViewProductButton={false} />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related Products</h4>\r\n                    {relatedProduct.map((p, i) => {\r\n                        return (\r\n                            <div className=\"mb-3\">\r\n                                <Card key={i} product={p} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx",["142","143","144"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport Card from './Card'\r\nimport { getCategories, getFilteredProducts } from './apiCore'\r\nimport Checkbox from './Checkbox'\r\nimport RadioBox from './RadioBox'\r\nimport { prices } from './fixedPrices'\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: {\r\n            category: [],\r\n            price: [],\r\n        },\r\n    })\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [limit, setLimit] = useState(6)\r\n    const [skip, setSkip] = useState(0)\r\n    const [size, setSize] = useState(0)\r\n    const [filteredResults, setFilteredResults] = useState([])\r\n\r\n    const init = () => {\r\n        getCategories().then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadFilteredResults = (newFilters) => {\r\n        //console.log(newFilters)\r\n        getFilteredProducts(skip, limit, newFilters).then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data])\r\n                setSize(data.size)\r\n                setSkip(toSkip)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load More\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n        loadFilteredResults(skip, limit, myFilters.filters)\r\n    }, [])\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        //console.log(filters, filterBy)\r\n        const newFilters = { ...myFilters }\r\n        newFilters.filters[filterBy] = filters\r\n\r\n        if (filterBy === 'price') {\r\n            let priceValues = handlePrice(filters)\r\n            newFilters.filters[filterBy] = priceValues\r\n        }\r\n        loadFilteredResults(myFilters.filters)\r\n        setMyFilters(newFilters)\r\n    }\r\n\r\n    const handlePrice = (value) => {\r\n        const data = prices\r\n        let array = []\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array\r\n            }\r\n        }\r\n\r\n        return array\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find goods of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={(filters) =>\r\n                                handleFilters(filters, 'category')\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by prices</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={(filters) =>\r\n                                handleFilters(filters, 'price')\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, index) => (\r\n                            <div key={index} className=\"col-4 mb-3\">\r\n                                <Card\r\n                                    id=\"Card\"\r\n                                    product={product}\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'space-between',\r\n                                        justifyContent: 'space-between',\r\n                                        flexWrap: 'wrap',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js",["145","146"],"export const addItem = (item, next) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.push({\r\n            ...item,\r\n            count: 1,\r\n        })\r\n\r\n        cart = Array.from(new Set(cart.map((p) => p._id))).map((id) => {\r\n            return cart.find((p) => p._id === id)\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n        next()\r\n    }\r\n}\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n    }\r\n    return []\r\n}\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n}\r\n\r\nexport const removeItem = (productId) => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1)\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n    }\r\n\r\n    return cart\r\n}\r\n\r\nexport const emptyCart = (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart')\r\n        next()\r\n    }\r\n}\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Menu.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx",["147"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx",["148","149","150","151","152"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport {\r\n    getBraintreeClientToken,\r\n    getProducts,\r\n    processPayment,\r\n    createOrder,\r\n} from './apiCore'\r\nimport { emptyCart } from './cartHelpers'\r\nimport Card from './Card'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\n\r\nconst Checkout = ({ products, refresh }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: '',\r\n    })\r\n\r\n    const deliveryAddress = data.address\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id\r\n    const token = isAuthenticated() && isAuthenticated().token\r\n\r\n    //TODO\r\n    useEffect(() => {\r\n        getPaymentToken(userId, token)\r\n    }, [])\r\n\r\n    const getPaymentToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then((data) => {\r\n            if (data.error) {\r\n                setData({ ...data, error: data.error })\r\n            } else {\r\n                setData({ clientToken: data.clientToken })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAddress = (event) => {\r\n        setData({ ...data, address: event.target.value })\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price\r\n        }, 0)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                {' '}\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    const buy = () => {\r\n        setData({ ...data, loading: true })\r\n        let nonce\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then((data) => {\r\n                nonce = data.nonce\r\n\r\n                //console.log(data)\r\n                //console.log(nonce, getTotal(products))\r\n\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products),\r\n                }\r\n\r\n                //console.log(paymentData)\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then((response) => {\r\n                        console.log(response)\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress,\r\n                        }\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n\r\n                        setData({ ...data, success: response.success })\r\n                        emptyCart(() => {\r\n                            refresh(true)\r\n                            console.log('payment success and empty cart')\r\n                            console.log(createOrderData)\r\n                            setData({ ...data, loading: false, success: true })\r\n                        })\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                        setData({ ...data, loading: false })\r\n                    })\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error)\r\n                setData({ ...data, error: error.message })\r\n            })\r\n    }\r\n\r\n    const showDropIn = () => {\r\n        return (\r\n            <div onBlur={() => setData({ ...data, error: '' })}>\r\n                {data.clientToken !== null &&\r\n                data.clientToken !== '' &&\r\n                products.length > 0 ? (\r\n                    <div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"\" className=\"text-muted\">\r\n                                Delivery Address:\r\n                            </label>\r\n\r\n                            <textarea\r\n                                onChange={handleAddress}\r\n                                className=\"form-control\"\r\n                                value={data.address}\r\n                                placeholder=\"Type your delivery address here...\"\r\n                            />\r\n                        </div>\r\n\r\n                        <DropIn\r\n                            options={{\r\n                                authorization: data.clientToken,\r\n                                paypal: {\r\n                                    flow: 'vault',\r\n                                },\r\n                            }}\r\n                            onInstance={(instance) =>\r\n                                (data.instance = instance)\r\n                            }\r\n                        />\r\n                        <button\r\n                            onClick={buy}\r\n                            className=\"btn btn-success btn-block\"\r\n                        >\r\n                            Pay\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showError = (error) => {\r\n        return (\r\n            <div\r\n                className=\"alert alert-danger\"\r\n                style={{ display: error ? '' : 'none' }}\r\n            >\r\n                {error}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showSuccess = (success) => {\r\n        return (\r\n            <div\r\n                className=\"alert alert-info\"\r\n                style={{ display: success ? '' : 'none' }}\r\n            >\r\n                Thanks! Your payment was successful!\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const showLoading = (loading) => {\r\n        return loading && <h2>Loading</h2>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n",["153","154"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\Signup.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\fixedPrices.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx",["155","156","157","158"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { createProduct, getCategories } from './apiAdmin'\r\n\r\nconst AddProduct = () => {\r\n    const { user, token } = isAuthenticated()\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photos: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: '',\r\n    })\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData,\r\n    } = values\r\n\r\n    const init = () => {\r\n        getCategories().then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData(),\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        const value =\r\n            name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: '', loading: true })\r\n\r\n        createProduct(user._id, token, formData).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    category: '',\r\n                    loading: false,\r\n                    createdProduct: data.name,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const newPostForm = () => {\r\n        return (\r\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n                <h4>Post Photo</h4>\r\n\r\n                <div className=\"from-group\">\r\n                    <label className=\"btn btn-secondary\">\r\n                        <input\r\n                            onChange={handleChange('photo')}\r\n                            type=\"file\"\r\n                            name=\"photo\"\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name</label>\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Description</label>\r\n                    <textarea\r\n                        onChange={handleChange('description')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={description}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Price</label>\r\n                    <input\r\n                        onChange={handleChange('price')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={price}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Category</label>\r\n                    <select\r\n                        onChange={handleChange('category')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        {categories &&\r\n                            categories.map((c, i) => {\r\n                                return (\r\n                                    <option key={i} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Quantity</label>\r\n                    <input\r\n                        onChange={handleChange('quantity')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={quantity}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Shipping</label>\r\n                    <select\r\n                        onChange={handleChange('shipping')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"1\">Yes</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button className=\"btn btn-outline-primary\">\r\n                    Create Product\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? error : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: createdProduct ? '' : 'none' }}\r\n        >\r\n            <h2>{`${createdProduct} is created`}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () =>\r\n        loading && <div className=\"alert alert-success\">Loading</div>\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new product\"\r\n            description={`Good day ${user.name}, ready to add a new product?`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddProduct\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkbox.jsx",["159"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (c) => () => {\r\n        const currentCategoryId = checked.indexOf(c)\r\n        const newCheckedCategoryId = [...checked]\r\n\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c)\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1)\r\n        }\r\n\r\n        console.log(newCheckedCategoryId)\r\n        setChecked(newCheckedCategoryId)\r\n        handleFilters(newCheckedCategoryId)\r\n    }\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\nexport default Checkbox\r\n",["160","161"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\ShowImage.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\config.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx",["162","163","164"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { createProduct, getCategories, listOrders } from './apiAdmin'\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n                console.log(data.user)\r\n                console.log(data.token)\r\n            } else {\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n    }, [])\r\n\r\n    const noOrders = (orders) => {\r\n        return orders.length < 1 ? <h4>No orders</h4> : null\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`Good day ${user.name}, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {noOrders(orders)}\r\n                    {JSON.stringify(orders)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"169"},{"ruleId":"167","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":8,"column":17,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":8,"column":17,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"171","severity":1,"message":"175","line":10,"column":12,"nodeType":"173","messageId":"174","endLine":10,"endColumn":17},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","replacedBy":"177"},{"ruleId":"165","replacedBy":"178"},{"ruleId":"167","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"175","line":9,"column":12,"nodeType":"173","messageId":"174","endLine":9,"endColumn":17},{"ruleId":"171","severity":1,"message":"175","line":17,"column":12,"nodeType":"173","messageId":"174","endLine":17,"endColumn":17},{"ruleId":"171","severity":1,"message":"180","line":18,"column":19,"nodeType":"173","messageId":"174","endLine":18,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":73,"column":8,"nodeType":"183","endLine":73,"endColumn":10,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":47,"column":31,"nodeType":"187","messageId":"188","endLine":47,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":64,"column":31,"nodeType":"187","messageId":"188","endLine":64,"endColumn":33},{"ruleId":"171","severity":1,"message":"189","line":4,"column":19,"nodeType":"173","messageId":"174","endLine":4,"endColumn":29},{"ruleId":"171","severity":1,"message":"190","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"191","line":5,"column":5,"nodeType":"173","messageId":"174","endLine":5,"endColumn":16},{"ruleId":"171","severity":1,"message":"192","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":12},{"ruleId":"181","severity":1,"message":"193","line":33,"column":8,"nodeType":"183","endLine":33,"endColumn":10,"suggestions":"194"},{"ruleId":"171","severity":1,"message":"195","line":69,"column":13,"nodeType":"173","messageId":"174","endLine":69,"endColumn":21},{"ruleId":"165","replacedBy":"196"},{"ruleId":"167","replacedBy":"197"},{"ruleId":"171","severity":1,"message":"198","line":29,"column":9,"nodeType":"173","messageId":"174","endLine":29,"endColumn":17},{"ruleId":"171","severity":1,"message":"199","line":30,"column":9,"nodeType":"173","messageId":"174","endLine":30,"endColumn":17},{"ruleId":"171","severity":1,"message":"200","line":35,"column":9,"nodeType":"173","messageId":"174","endLine":35,"endColumn":26},{"ruleId":"181","severity":1,"message":"201","line":55,"column":8,"nodeType":"183","endLine":55,"endColumn":10,"suggestions":"202"},{"ruleId":"171","severity":1,"message":"203","line":1,"column":27,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"165","replacedBy":"204"},{"ruleId":"167","replacedBy":"205"},{"ruleId":"171","severity":1,"message":"206","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":23},{"ruleId":"171","severity":1,"message":"207","line":4,"column":25,"nodeType":"173","messageId":"174","endLine":4,"endColumn":38},{"ruleId":"181","severity":1,"message":"208","line":25,"column":8,"nodeType":"183","endLine":25,"endColumn":10,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],["210"],["211"],"no-unused-vars","'_id' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["210"],["211"],["210"],["211"],"'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.","ArrayExpression",["212"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeItem' is defined but never used.","'Layout' is defined but never used.","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["213"],"'getNonce' is assigned a value but never used.",["210"],["211"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["214"],"'useEffect' is defined but never used.",["210"],["211"],"'createProduct' is defined but never used.","'getCategories' is defined but never used.","React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"224","text":"225"},"Update the dependencies array to be: [token, userId]",{"range":"226","text":"227"},"Update the dependencies array to be: [init]",{"range":"228","text":"229"},"Update the dependencies array to be: [loadOrders]",{"range":"230","text":"231"},[2170,2172],"[limit, loadFilteredResults, myFilters.filters, skip]",[906,908],"[token, userId]",[1333,1335],"[init]",[708,710],"[loadOrders]"]