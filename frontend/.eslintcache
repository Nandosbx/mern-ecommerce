[{"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js":"1","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx":"2","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx":"3","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx":"4","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx":"5","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx":"6","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\apiUser.js":"7","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js":"8","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\ManageProducts.jsx":"9","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx":"10","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\UpdateProduct.jsx":"11","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx":"12","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx":"13","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx":"14","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js":"15","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\RadioBox.jsx":"16","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx":"17","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx":"18","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js":"19"},{"size":2601,"mtime":1607815315799,"results":"20","hashOfConfig":"21"},{"size":4132,"mtime":1607811235134,"results":"22","hashOfConfig":"21"},{"size":6910,"mtime":1607818410111,"results":"23","hashOfConfig":"21"},{"size":6255,"mtime":1607104393266,"results":"24","hashOfConfig":"21"},{"size":1967,"mtime":1607811223631,"results":"25","hashOfConfig":"21"},{"size":2405,"mtime":1607811231752,"results":"26","hashOfConfig":"21"},{"size":1690,"mtime":1607811244335,"results":"27","hashOfConfig":"21"},{"size":4092,"mtime":1607818624319,"results":"28","hashOfConfig":"21"},{"size":2988,"mtime":1607819581983,"results":"29","hashOfConfig":"21"},{"size":2351,"mtime":1607104606100,"results":"30","hashOfConfig":"21"},{"size":7966,"mtime":1607817883016,"results":"31","hashOfConfig":"21"},{"size":7393,"mtime":1607816523696,"results":"32","hashOfConfig":"21"},{"size":645,"mtime":1607816527276,"results":"33","hashOfConfig":"21"},{"size":2645,"mtime":1606669346458,"results":"34","hashOfConfig":"21"},{"size":2034,"mtime":1606974074257,"results":"35","hashOfConfig":"21"},{"size":675,"mtime":1606669478139,"results":"36","hashOfConfig":"21"},{"size":5214,"mtime":1607957291765,"results":"37","hashOfConfig":"21"},{"size":4971,"mtime":1607957579115,"results":"38","hashOfConfig":"21"},{"size":1783,"mtime":1606439874796,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1takxqy",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\Routes.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\UserDashboard.jsx",["86"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddProduct.jsx",["87","88","89","90"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { createProduct, getCategories } from './apiAdmin'\r\n\r\nconst AddProduct = () => {\r\n    const { user, token } = isAuthenticated()\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: '',\r\n    })\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData,\r\n    } = values\r\n\r\n    const init = () => {\r\n        getCategories().then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData(),\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [setValues])\r\n\r\n    const handleChange = (name) => (event) => {\r\n        const value =\r\n            name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: '', loading: true })\r\n\r\n        createProduct(user._id, token, formData).then((data) => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    category: '',\r\n                    loading: false,\r\n                    createdProduct: data.name,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const newPostForm = () => {\r\n        return (\r\n            <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n                <h4>Post Photo</h4>\r\n\r\n                <div className=\"from-group\">\r\n                    <label className=\"btn btn-secondary\">\r\n                        <input\r\n                            onChange={handleChange('photo')}\r\n                            type=\"file\"\r\n                            name=\"photo\"\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name</label>\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Description</label>\r\n                    <textarea\r\n                        onChange={handleChange('description')}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={description}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Price</label>\r\n                    <input\r\n                        onChange={handleChange('price')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={price}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Category</label>\r\n                    <select\r\n                        onChange={handleChange('category')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        {categories &&\r\n                            categories.map((c, i) => {\r\n                                return (\r\n                                    <option key={i} value={c._id}>\r\n                                        {c.name}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Quantity</label>\r\n                    <input\r\n                        onChange={handleChange('quantity')}\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={quantity}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Shipping</label>\r\n                    <select\r\n                        onChange={handleChange('shipping')}\r\n                        className=\"form-control\"\r\n                    >\r\n                        <option>Please Select</option>\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"1\">Yes</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button className=\"btn btn-outline-primary\">\r\n                    Create Product\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? error : 'none' }}\r\n        >\r\n            {error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: createdProduct ? '' : 'none' }}\r\n        >\r\n            <h2>{`${createdProduct} is created`}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () =>\r\n        loading && <div className=\"alert alert-success\">Loading</div>\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new product\"\r\n            description={`Good day ${user.name}, ready to add a new product?`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddProduct\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Checkout.jsx",["91","92","93","94","95"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Home.jsx",["96"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts } from './apiCore'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n    }, [])\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Homepage\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, index) => (\r\n                    <div key={index} className=\"col-4 mb-3\">\r\n                        <Card product={product} style={{ display: 'flex' }} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home\r\n",["97","98"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\AdminDashboard.jsx",["99"],"import React from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role },\r\n    } = isAuthenticated()\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h4 className=\"card-header \">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/category\" className=\"nav-link\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/create/product\" className=\"nav-link\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/admin/orders\" className=\"nav-link\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item\">\r\n                        <Link to=\"/admin/products\" className=\"nav-link\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5 \">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? 'Admin' : 'Registered User'}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`Good day ${name}`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n",["100","101"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\user\\apiUser.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\ManageProducts.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Cart.jsx",["102"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { Link } from 'react-router-dom'\r\nimport { getCart, removeItem } from './cartHelpers'\r\nimport Card from './Card'\r\nimport Checkout from './Checkout'\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([])\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setItems(getCart())\r\n        setRefresh(false)\r\n    }, [refresh])\r\n\r\n    const showItems = (items) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4\">\r\n                    Your cart has {`${items.length}`} items\r\n                </h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        refresh={(value = false) => {\r\n                            setRefresh(value)\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const noItemsMessage = () => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4\">\r\n                    Your cart is empty.\r\n                    <hr />\r\n                    <Link to=\"/shop\">Continue Shopping</Link>\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your car items. Add, remove, checkout or continue shopping\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout\r\n                        products={items}\r\n                        refresh={(value = false) => {\r\n                            setRefresh(value)\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\UpdateProduct.jsx",["103","104","105"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\Orders.jsx",["106"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { listOrders, getStatusValues, updateOrderStatus } from './apiAdmin'\r\nimport moment from 'moment'\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n                console.log(data.user)\r\n                console.log(data.token)\r\n            } else {\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then((data) => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setStatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValues()\r\n    }, [])\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            )\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>\r\n        }\r\n    }\r\n\r\n    const showInput = (key, value) => {\r\n        return (\r\n            <div className=\"input-group mb-2 mr-sm-2\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">{key}</div>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    className=\"form-control\"\r\n                    readOnly\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleStatusChange = (event, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, event.target.value).then(\r\n            (data) => {\r\n                if (data.error) {\r\n                    console.log('Status update failed', data.error)\r\n                } else {\r\n                    loadOrders()\r\n                    console.log(event.target.value)\r\n                    console.log('Success')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const showStatus = (order) => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <h3 className=\"mark mb-3\">Status: {order.status}</h3>\r\n\r\n                <select\r\n                    onChange={(event) => handleStatusChange(event, order._id)}\r\n                    className=\"form-control\"\r\n                >\r\n                    <option>Update Status</option>\r\n                    {statusValues.map((status, index) => (\r\n                        <option key={index} value={status}>\r\n                            {status}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`Good day ${user.name}, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((order, index) => {\r\n                        console.log(order)\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                className=\"mt-5\"\r\n                                style={{ borderBottom: '5px solid indigo' }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {order._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(order)}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {order.transaction_id}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${order.amount}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {order.user.name}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{' '}\r\n                                        {moment(order.createdAt).fromNow()}\r\n                                    </li>\r\n\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {order.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{' '}\r\n                                    {order.products.length}\r\n                                </h3>\r\n\r\n                                {order.products.map((product, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"mb-4\"\r\n                                            key={index}\r\n                                            style={{\r\n                                                padding: '20px',\r\n                                                border: '1px solid indigo',\r\n                                            }}\r\n                                        >\r\n                                            {showInput(\r\n                                                'Product name',\r\n                                                product.name\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product price',\r\n                                                product.price\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product total',\r\n                                                product.count\r\n                                            )}\r\n                                            {showInput(\r\n                                                'Product Id',\r\n                                                product._id\r\n                                            )}\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\AdminRoute.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\admin\\AddCategory.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\cartHelpers.js",["107","108"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\RadioBox.jsx",["109","110","111"],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Card.jsx",[],"C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\core\\Shop.jsx",["112","113","114"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport Card from './Card'\r\nimport { getCategories, getFilteredProducts } from './apiCore'\r\nimport Checkbox from './Checkbox'\r\nimport RadioBox from './RadioBox'\r\nimport { prices } from './fixedPrices'\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: {\r\n            category: [],\r\n            price: [],\r\n        },\r\n    })\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [limit, setLimit] = useState(6)\r\n    const [skip, setSkip] = useState(0)\r\n    const [size, setSize] = useState(0)\r\n    const [filteredResults, setFilteredResults] = useState([])\r\n\r\n    const init = () => {\r\n        getCategories().then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadFilteredResults = (newFilters) => {\r\n        //console.log(newFilters)\r\n        getFilteredProducts(skip, limit, newFilters).then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setFilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then((data) => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data])\r\n                setSize(data.size)\r\n                setSkip(toSkip)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load More\r\n                </button>\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()\r\n        loadFilteredResults(skip, limit, myFilters.filters)\r\n    }, [])\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        //console.log(filters, filterBy)\r\n        const newFilters = { ...myFilters }\r\n        newFilters.filters[filterBy] = filters\r\n\r\n        if (filterBy === 'price') {\r\n            let priceValues = handlePrice(filters)\r\n            newFilters.filters[filterBy] = priceValues\r\n        }\r\n        loadFilteredResults(myFilters.filters)\r\n        setMyFilters(newFilters)\r\n    }\r\n\r\n    const handlePrice = (value) => {\r\n        const data = prices\r\n        let array = []\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array\r\n            }\r\n        }\r\n\r\n        return array\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find goods of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={(filters) =>\r\n                                handleFilters(filters, 'category')\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by prices</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={(filters) =>\r\n                                handleFilters(filters, 'price')\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, index) => (\r\n                            <div key={index} className=\"col-4 mb-3\">\r\n                                <Card\r\n                                    id=\"Card\"\r\n                                    product={product}\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'space-between',\r\n                                        justifyContent: 'space-between',\r\n                                        flexWrap: 'wrap',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","C:\\Users\\Fernando\\Documents\\Projetos\\mern-ecommerce\\frontend\\src\\auth\\index.js",[],{"ruleId":"115","severity":1,"message":"116","line":29,"column":8,"nodeType":"117","endLine":29,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":29,"column":9,"nodeType":"121","messageId":"122","endLine":29,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":30,"column":9,"nodeType":"121","messageId":"122","endLine":30,"endColumn":17},{"ruleId":"119","severity":1,"message":"124","line":35,"column":9,"nodeType":"121","messageId":"122","endLine":35,"endColumn":26},{"ruleId":"115","severity":1,"message":"125","line":55,"column":8,"nodeType":"117","endLine":55,"endColumn":19,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"128","line":5,"column":5,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":12},{"ruleId":"115","severity":1,"message":"130","line":33,"column":8,"nodeType":"117","endLine":33,"endColumn":10,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":69,"column":13,"nodeType":"121","messageId":"122","endLine":69,"endColumn":21},{"ruleId":"119","severity":1,"message":"133","line":10,"column":12,"nodeType":"121","messageId":"122","endLine":10,"endColumn":17},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"119","severity":1,"message":"138","line":8,"column":17,"nodeType":"121","messageId":"122","endLine":8,"endColumn":20},{"ruleId":"134","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"119","severity":1,"message":"141","line":4,"column":19,"nodeType":"121","messageId":"122","endLine":4,"endColumn":29},{"ruleId":"119","severity":1,"message":"120","line":33,"column":9,"nodeType":"121","messageId":"122","endLine":33,"endColumn":17},{"ruleId":"119","severity":1,"message":"123","line":34,"column":9,"nodeType":"121","messageId":"122","endLine":34,"endColumn":17},{"ruleId":"115","severity":1,"message":"142","line":75,"column":8,"nodeType":"117","endLine":75,"endColumn":10,"suggestions":"143"},{"ruleId":"115","severity":1,"message":"144","line":37,"column":8,"nodeType":"117","endLine":37,"endColumn":10,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":47,"column":31,"nodeType":"148","messageId":"149","endLine":47,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":64,"column":31,"nodeType":"148","messageId":"149","endLine":64,"endColumn":33},{"ruleId":"119","severity":1,"message":"150","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"151","line":1,"column":38,"nodeType":"121","messageId":"122","endLine":1,"endColumn":46},{"ruleId":"119","severity":1,"message":"152","line":4,"column":12,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"133","line":17,"column":12,"nodeType":"121","messageId":"122","endLine":17,"endColumn":17},{"ruleId":"119","severity":1,"message":"153","line":18,"column":19,"nodeType":"121","messageId":"122","endLine":18,"endColumn":27},{"ruleId":"115","severity":1,"message":"154","line":73,"column":8,"nodeType":"117","endLine":73,"endColumn":10,"suggestions":"155"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["156"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["157"],"'Layout' is defined but never used.","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["158"],"'getNonce' is assigned a value but never used.","'error' is assigned a value but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'_id' is assigned a value but never used.",["159"],["160"],"'removeItem' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["162"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["163"],{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [_id, token]",{"range":"176","text":"177"},"Update the dependencies array to be: [init, setValues]",{"range":"178","text":"179"},"Update the dependencies array to be: [token, userId]",{"range":"180","text":"181"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"182","text":"183"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"184","text":"185"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"186","text":"187"},[780,782],"[_id, token]",[1332,1343],"[init, setValues]",[906,908],"[token, userId]",[2030,2032],"[init, match.params.productId]",[1093,1095],"[loadOrders, loadStatusValues]",[2170,2172],"[limit, loadFilteredResults, myFilters.filters, skip]"]